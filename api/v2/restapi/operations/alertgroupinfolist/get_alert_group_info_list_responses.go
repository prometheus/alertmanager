// Code generated by go-swagger; DO NOT EDIT.

// Copyright Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package alertgroupinfolist

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/prometheus/alertmanager/api/v2/models"
)

// GetAlertGroupInfoListOKCode is the HTTP code returned for type GetAlertGroupInfoListOK
const GetAlertGroupInfoListOKCode int = 200

/*
GetAlertGroupInfoListOK Get alert groups info response

swagger:response getAlertGroupInfoListOK
*/
type GetAlertGroupInfoListOK struct {

	/*
	  In: Body
	*/
	Payload *models.AlertGroupInfoList `json:"body,omitempty"`
}

// NewGetAlertGroupInfoListOK creates GetAlertGroupInfoListOK with default headers values
func NewGetAlertGroupInfoListOK() *GetAlertGroupInfoListOK {

	return &GetAlertGroupInfoListOK{}
}

// WithPayload adds the payload to the get alert group info list o k response
func (o *GetAlertGroupInfoListOK) WithPayload(payload *models.AlertGroupInfoList) *GetAlertGroupInfoListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alert group info list o k response
func (o *GetAlertGroupInfoListOK) SetPayload(payload *models.AlertGroupInfoList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlertGroupInfoListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAlertGroupInfoListBadRequestCode is the HTTP code returned for type GetAlertGroupInfoListBadRequest
const GetAlertGroupInfoListBadRequestCode int = 400

/*
GetAlertGroupInfoListBadRequest Bad request

swagger:response getAlertGroupInfoListBadRequest
*/
type GetAlertGroupInfoListBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAlertGroupInfoListBadRequest creates GetAlertGroupInfoListBadRequest with default headers values
func NewGetAlertGroupInfoListBadRequest() *GetAlertGroupInfoListBadRequest {

	return &GetAlertGroupInfoListBadRequest{}
}

// WithPayload adds the payload to the get alert group info list bad request response
func (o *GetAlertGroupInfoListBadRequest) WithPayload(payload string) *GetAlertGroupInfoListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alert group info list bad request response
func (o *GetAlertGroupInfoListBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlertGroupInfoListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAlertGroupInfoListInternalServerErrorCode is the HTTP code returned for type GetAlertGroupInfoListInternalServerError
const GetAlertGroupInfoListInternalServerErrorCode int = 500

/*
GetAlertGroupInfoListInternalServerError Internal server error

swagger:response getAlertGroupInfoListInternalServerError
*/
type GetAlertGroupInfoListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAlertGroupInfoListInternalServerError creates GetAlertGroupInfoListInternalServerError with default headers values
func NewGetAlertGroupInfoListInternalServerError() *GetAlertGroupInfoListInternalServerError {

	return &GetAlertGroupInfoListInternalServerError{}
}

// WithPayload adds the payload to the get alert group info list internal server error response
func (o *GetAlertGroupInfoListInternalServerError) WithPayload(payload string) *GetAlertGroupInfoListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alert group info list internal server error response
func (o *GetAlertGroupInfoListInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlertGroupInfoListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
